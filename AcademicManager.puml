@startuml AcademicManager


package academicmanager {
    note "The builders, setters, and getters \n are not included in the diagram." as N1

    class AcademicManager {
        # loadData(): void
        {static} + main(args: String[]): void
    }

    ' ==========================================================================

    package common {

        interface Model {
            save(): void
            load(): void
            validate(): boolean
        }

        interface Controller {
            main(): void
            create(): void
            update(): void
            view(): void
            delete(): void
        }

    }

    ' ==========================================================================

    package student {
        
        class Student {
            {static} - TRANSLATE_NAME: String
            - id: int
            - dossierNumber: String
            - firstName: String
            - lastName: String
            - birthDate: LocalDate
            - idCareer: int
            {static} # serial: int
            {static} # all: Map<Integer, Student>

            {static} # addSerial(): void
            {static} + getById(int id): Student
            {static} + getAll(): Map<Integer, Student>
            {static} + loadData(): void
            {abstract} + save(): void
            {abstract} + validate(): boolean
            {abstract} + toString(): String
        }

        class StudentController {
            {abstract} + main(): void
            {abstract} + create(): void
            {abstract} + update(): void
            {abstract} + view(): void
            {abstract} + delete(): void
        }

    }
    
    ' ==========================================================================

    package career {
        
        class Career {
            {static} - TRANSLATE_NAME: String
            - id: int
            - name: String
            - idStudyPlan: int
            {static} # serial: int
            {static} # all: Map<Integer, Career>

            {static} # addSerial(): void
            {static} + getById(int id): Career
            {static} + getAll(): Map<Integer, Career>
            {static} + loadData(): void
            {abstract} + save(): void
            {abstract} + validate(): boolean
            {abstract} + toString(): String
        }

        class CareerController {
            {abstract} + main(): void
            {abstract} + create(): void
            {abstract} + update(): void
            {abstract} + view(): void
            {abstract} + delete(): void
        }

    }

    ' ==========================================================================

    package studyplan {
        
        class StudyPlan {
            {static} - TRANSLATE_NAME: String
            {static} - TYPES_STUDY_PLAN: List<String>
            - id: int
            - type: String
            {static} # serial: int
            {static} # all: Map<Integer, StudyPlan>

            {static} # addSerial(): void
            {static} + getById(int id): StudyPlan
            {static} + getAll(): Map<Integer, StudyPlan>
            {static} + loadData(): void
            {abstract} + save(): void
            {abstract} + validate(): boolean
            {abstract} + toString(): String
        }

        class StudyPlanController {
            {abstract} + main(): void
            {abstract} + create(): void
            {abstract} + update(): void
            {abstract} + view(): void
            {abstract} + delete(): void
        }

    }

    package subject {
        
        class Subject {
            {static} - TRANSLATE_NAME: String
            - id: int
            - name: String
            - isOptional: boolean
            - fourMonths: int
            - idStudyPlan: int
            {static} # serial: int
            {static} # all: Map<Integer, Subject>

            {static} # addSerial(): void
            {static} + getById(int id): Subject
            {static} + getAll(): Map<Integer, Subject>
            {static} + loadData(): void
            {abstract} + save(): void
            {abstract} + validate(): boolean
            {abstract} + toString(): String
        }

        class SubjectController {
            {abstract} + main(): void
            {abstract} + create(): void
            {abstract} + update(): void
            {abstract} + view(): void
            {abstract} + delete(): void
        }

    }
}

' ==============================================================================
' conexiones de clases

' main
AcademicManager *-- Student
AcademicManager *-- Career
AcademicManager *-- StudyPlan 

' estudiantes 

Student --|> Model

StudentController --|> Controller
StudentController <-- Student

' carreras

Career --|> Model

CareerController --|> Controller
CareerController <-- Career

' plan de Estudio

StudyPlan --|> Model

StudyPlanController --|> Controller
StudyPlanController <-- StudyPlan

' carrera

Subject --|> Model

SubjectController --|> Controller
SubjectController <-- Subject

' ==============================================================================

@enduml